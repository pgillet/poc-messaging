# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Number of messages to send per producer
num-messages=9000
num-warmup-messages=100

# Message size in bytes (Ex: 1000 = 1 kb, 1024 = 1 kib)
message-size=15000

# Message persistence
durable=false

# Transactions allow multiple messages to be sent or received in an atomic operation
transacted=false
# If transacted, number of messages per transaction
batch-size=100

# Tells whether we should remove first the contents of the destination, if it already exists
drain-queue=true

# TOPIC or QUEUE
destination-type=TOPIC

# The destination. It will be created if it does not already exist
#destination-name=jms.queue.PerfQueue
destination-name=/topic/test
#destination-name=/amq/queue/jms.queue.PerfQueue
#destination-name=/exchange/amq.direct/gruik

# Number of parallel producers
num-producers=2

# Number of parallel consumers
num-consumers=10

# Tells whether a single JMS connection should be used for concurrent use by producers and consumers (to simulate a single
# client multithreaded application).
# A new connection will be created for each producer and consumer otherwise (to simulate as many single-threaded
# applications as the number of producers and consumers).
reuse-connection=false

# We can throttle the send of messages at a specific rate (messages per time unit)
# Ex: 2 messages per minute (throttle-rate=1, time-unit=SECONDS, unit-amount=30)
throttle-rate=10
# SECONDS or MINUTES
time-unit= SECONDS
unit-amount=1

# If true, at least once delivery. AUTO_ACKNOWLEDGE otherwise.
dups-ok-acknowledge=true

# If priorities are enabled (> 0), messages will be sent with a random priority between 0 and num-priorities
num-priorities=-1

# Specify whether message IDs may be disabled
disable-message-id=false

# Specify whether message timestamps may be disabled
disable-message-timestamp=false

# RabbitMQ
#server-uri=amqp://host:5672
server-uri=failover:(amqp://host1:5672,amqp://host2:5672,amqp://host3:5672)?jms.prefetchPolicy.all=10

# For TLS-enabled connections, set the transport.verifyHost option to false to not verify that the hostname being
# connected to matches with the provided server certificate. Defaults to true.
#server-uri=amqps://host:5671?transport.verifyHost=false
# This does not work!
#server-uri=failover:(amqps://host1:5671,amqps://host2:5671,amqps://host3:5671)?transport.verifyHost=false

# Artemis
#server-uri=amqp://host:5672
#server-uri=amqps://host:5671?transport.verifyHost=false

#server-uri=failover:(amqp://host1:5672,amqp://host2:5672,amqp://host3:5672)
#server-uri=failover:(amqps://host1:5671,amqps://host2:5671,amqps://host3:5671)?transport.verifyHost=false

#server-uri=tcp://localhost:61616

#valid ones are openwire,core,amqp
client-library=amqp
#client-library=openwire
#client-library=core

# User auth
username=
password=

# If TLS-enabled connections
# Will be written to system property "javax.net.ssl.keyStore"
transport-keyStoreLocation=/path/to/tls/client_key.p12
# Will be written to the system property "javax.net.ssl.keyStorePassword"
transport-keyStorePassword=bunnies
# Will be written to the system property "javax.net.ssl.trustStore"
transport-trustStoreLocation= /path/to/tls-gen/basic/cacerts
# Will be written to the system property "javax.net.ssl.trustStorePassword"
transport-trustStorePassword=changeit
